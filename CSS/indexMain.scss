@import 'mixins.scss';
@import 'vars.scss';


@keyframes fadeOut {
    0% {
        opacity: 1;
    }

    99% {
        opacity: 0.5;
        height: 100%;
    }

    100% {
        opacity: 0;
        height: 0px;
    }
}

@keyframes loading {
    0% {
        // Démarrage en position négative de 360 deg
        transform: rotateX(-360deg);
    }

    70% {
        // On le fait tourner vers la position 0 deg
        transform: rotateX(0);
    }
}

h2 {
    @include txt-format(24px, 700);
}

p {
    @include txt-format(17px, 300);
}

a {
    text-decoration: none;
    color: black;
}

svg {
    position: absolute;
    bottom: 33px;
    right: 25px;
}

.loading-container {
    // L'élément est retiré du flux normal et aucun espace n'est laissé pour l'élément et empêche le défilement
    position: fixed;
    background-image: linear-gradient(to top, $primary-color, $secondary-color);
    height: 100%;
    width: 100%;
    z-index: 1;
    top: 0;
    align-items: center;
    justify-content: center;
    display: flex;
    animation: fadeOut 3s;

    //Prolonge les valeurs finales de l'animation jusqu'à ce que la page soit rechargée ou que le navigateur soit fermé
    animation-fill-mode: forwards;

    .loading {
        color: $green-icon;
        font-size: 60px;
        text-align: center;
        display: inline-grid;

        @media (min-width: 768px) {
            display: block;
        }

        .span {
            display: inline-block;
            animation: loading 1s infinite;

            @for $i from 1 through 8 {
                &-#{$i} {
                    // Retarde le debut de l'animation                 
                    animation-delay: calc($i * 0.1s);
                }
            }
        }
    }
}

.hero {
    background-color: $background-color;
    padding: 39px 0 57px 0;
    text-align: center;

    @media (min-width: 768px) {
        padding: 30px 0;
    }

    h2 {
        margin: 0 50px 12px 50px;

        @media (min-width: 768px) {
            font-size: 40px;
        }
    }

    p {
        margin: 0 30px 27px 30px;
        font-size: 18px;
        color: $txt-color;
    }

    .button {
        width: 13.63rem;
        @include flex-center(3.13rem);
        display: inline-flex;
        border-radius: 25px;
        box-shadow: 0px 4px 10px 0px rgba(0, 0, 0, 0.25);
        background-image: linear-gradient(to top, $primary-color, $secondary-color);
        border: none;
        color: white;
        transition: all 500ms ease-in-out;

        &:hover {
            background-image: linear-gradient(to top, lighten($primary-color, 5%), lighten($secondary-color, 5%));
            box-shadow: 0px 4px 10px 0px rgba(0, 0, 0, 0.5);
        }
    }
}

.functioning {
    margin: 48px 20px 43px 20px;

    @media (min-width: 768px) {
        margin: 50px 180px 50px 180px;
    }

    h2 {
        margin-bottom: 26px;
    }

    .buttons-container {
        @media (min-width: 1024px) {
            display: grid;
            grid-template-columns: 1fr 1fr 1fr;
            gap: 24px;
        }

        button {
            width: calc(100% - 20px);
            @include flex-center(4.52rem, flex-start);
            margin: 0 0 25px 12.5px;
            border-radius: 20px;
            box-shadow: 0px 4px 15px 0px rgba(0, 0, 0, 0.15);
            background-color: $background-color;
            border: none;

            @media (min-width: 768px) {
                width: 100%;
            }

            .i-mobile {
                @include icon-button(9.47px, 27px, $icon-color);
            }

            .i-list {
                @include icon-button(10.49px, 23px, $icon-color);
            }

            .i-store {
                @include icon-button(11.49px, 20px, $primary-color);
            }

            span {
                width: 24px;
                @include flex-center(24px);
                background-color: $primary-color;
                border-radius: 50%;
                @include txt-format(14.18px, 500);
                position: relative;
                right: 12.51px;
                color: white;
            }
        }
    }
}

.restaurants {
    background-color: $background-color;
    padding: 54px 20px 66px 20px;

    @media (min-width: 768px) {
        padding: 30px 180px 30px 180px;
    }

    h2 {
        margin-bottom: 20px;

        @media (min-width: 768px) {
            margin-bottom: 28px;
        }
    }

    .cards-container {
        display: grid;
        gap: 18px;

        @media (min-width: 1024px) {
            grid-template-columns: 1fr 1fr;
            column-gap: 100px;
            row-gap: 50px;
        }

        .card {
            position: relative;
            background-color: white;
            border-radius: 15px;
            color: black;
            padding-bottom: 16px;

            span {
                width: 80px;
                @include flex-center(29px);
                background-color: #99E2D0;
                color: #008766;
                @include txt-format(14px, 500);
                position: absolute;
                top: 13px;
                right: 12px;
            }

            img {
                object-fit: cover;
                width: 100%;
                height: 231px;
                border-radius: 15px 15px 0 0;
                margin-bottom: 15px;
            }

            h3 {
                @include txt-format(18px, 700);
                margin: 0 0 5px 16px;
            }

            p {
                margin-left: 16px;
            }

            .regular-heart {
                // Utilisation du combinateur d'adjacence + pour créer la transition sur l'élément voisin 
                &:hover+.solid-heart {
                    transform: scale(1);
                }
            }

            .solid-heart {
                fill: url(#icon);

                // Permet de déplacer le point d'ancrage où on veut faire partir l'animation
                transform-origin: top;

                // Permet de modifier la taille d'un élément selon la valeur qu'on lui donne
                transform: scale(0);
                transition: transform 300ms ease-in-out;
                // Fonction de timing = courbe d'accélération de l'animation 
            }
        }
    }
}